matrix(c(1,2,3,4,5))
m = matrix(c(1,2,3,4,5))
m
m = matrix(c(1,2,3,4,5),nrow=1)
m
1:10
p <- 1:10
p
h <- 1:1000
h <- 1:100
h
m = matrix(c(1,2,3,4,5))
m
m = matrix(c(1,2,3,4,5),nrow=1)
m
m <- matrix(1:25,nrow=5,ncol=5)
m
z <- data.frame(var1=c(1,2,3,4,5))
z
z <- data.frame(var1=c(1,2,3,4,5))
z
z <- data.frame(var1=c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
z
m
z
array(0,c(1,1,1))
array(0,c(2,2,2))
a = array(0,c(2,2,2))
a
L = list(var1 = c(1,2,3,4,5))
L
L = list(var1 = c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
L
x
class(x)
class("hello")
class(FALSE)
class(2i)
is.character("hello")
is.character(1.45)
object = "string"
object = "A sentence about something."
class(object)
object + 1
object = 1
class(object)
object + 1
class(y)
class(z)
vec1 <- c(TRUE,1,3)
vec1
vec1 <- c(TRUE,1,3,FALSE)
vec1 <- c(TRUE,1,3,FALSE) # Logical to Numeric
vec1
vec1 <- c(TRUE,89,3,FALSE) # Logical to Numeric
vec1
vec2 <- c("cat",89,4,"dog")
vec2 <- c("cat",89,3,"dog")
vec2
vec3 <- c(TRUE,"cat",89,3,"dog",FALSE)
vec3
m <- matrix(c(1,2,3,4,5))
m
m <- matrix(c(1,2,3,4,5),nrow=1)
m
m <- matrix(1:25,nrow=5,ncol=5)
m
m
m <- matrix(c("cat",89,6,7,"dog"))
mat2 <- matrix(c("cat",89,6,7,"dog"))
m <- matrix(1:25,nrow=5,ncol=5)
m
mat2
mat1 <- matrix(c("cat",89,6,7,"dog"))
mat1
mat2 <- matrix(c(1:10,"dog","cat"),ncol=2,nrow=6)
mat2
mat1 <- matrix(c(1:10,"dog","cat"),ncol=2,nrow=6)
mat1
m
a = array(0,c(2,2,2))
a
L = list(var1 = c(1,2,3,4,5),
var2= c("A","B","C","D","E"))
L
z <- data.frame(var1=c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
z
class(z)
class(L)
class(a)
class(m)
m
as.data.frame(m)
m
m
z
D <- data.frame(var1=c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
D <- data.frame(var1=c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
D
class(D)
D[,1]
class(D[,1])
M <- matrix(c(1,2,3,4,5,"A","B","C","D","E"))
M
M <- matrix(c(1,2,3,4,5,"A","B","C","D","E"),ncol=2)
M
D
M
M[,1]
class(M[,1])
D[,1]
class(D[,1])
x = 1:5
length(x)
y <- c(1,2,3,4,5)
y
y
y
length(y)
y
length(y)
M
dim(M)
nrow(M)
ncol(M)
D(dim)
dim(D)
D
D
dim(D)
m
dim(m)
nrow(m)
ncol(m)
M
M[1,]
M[,1]
M[1,1] # the first cell
D
D[1,]
D[1,] # first row
D[,1]
D[,"var1"]
D[1,"var1"]
y
y[1]
D
D # similarly, look at the row and column in the data
D[1,] # first row
D[,1] # first column
D[,"var1"] # first column using the columns name
D[1,"var1"] # first cell
y # vector
y[1]
y # vector
y[1]
y[3]
length(y)
m
length(1)
length("hello")
y
length(y)
m
dim(m)
nrow(m)
ncol(m)
D
dim(D)
y # vector
y[1]
y[3] # we can grab specific locations within a vector.
c("A","B","C","D")[1]
c("A","B","C","D")[2]
y # vector
y[1]
y[3] # we can grab specific locations within a vector.
M # look at the row and column heading when we print our matrix
M[1,] # the first row
M[,1] # the first column
M[1,1] # the first cell
D # data frame
D[1,] # first row
D[,1] # first column
D[,"var1"] # first column using the columns name
D[1,"var1"] # first cell
1:50
x = 1:50
x
as.matrix(x)
as.matrix(x,ncol=4)
as.matrix(x,ncol=4)
as.matrix(x,ncol=5)
as.matrix(x,ncol=5)
as.matrix(x)
x = 1:10
x
as.matrix(x)
as.data.frame(x)
as.array(x)
as.list(x)
install.packages("foreign")
var1=c(1,2,3,4,5)
var1=c(1,2,3,4,5)
var2=c("A","B","C","D","E")
D <- data.frame(var1,var2)
D
var1
var2
D <- data.frame(var1,var2)
D
class(D)
D <- data.frame(var1=c(1,2,3,4,5),
var2=c("A","B","C","D","E"))
M <- matrix(c(1,2,3,4,5,"A","B","C","D","E"),ncol=2)
D
M
M[,1]
class(M[,1])
D[,1]
class(D[,1])
D$var1
D$var2
factor("hello!")
require(foreign)
?foreign
??foreign
?read.dta()
library(RODBC)
channel <- odbcConnect("testdb", uid="ripley", case="tolower")
library(RODBC)
install.packages("RODBC")
require(RODBC)
channel <- odbcConnect("testdb", uid="ripley", case="tolower")
install.packages("RODBC") # For accessing and querying SQL databases
require(RODBC)
install.packages("RODBC") # For accessing and querying SQL databases
require(RODBC)
install.packages("r-cran-rodbc") # For accessing and querying SQL databases
RODBC
install.packages("RODBC") # For accessing and querying SQL databases
install.packages("ODBC") # For accessing and querying SQL databases
install.packages("odbc") # For accessing and querying SQL databases
install.packages("RODBC")
require(RODBC)
install.packages("sqldf") # For accessing and querying SQL databases
install.packages("RODBC")
require(sqldf)
channel <- odbcConnect("testdb", uid="ripley", case="tolower")
channel <- odbcDriverConnect("testdb", uid="ripley", case="tolower")
??sqldf
install.packages("RODBC",repos = "https://sourceforge.net/projects/rodbc/")
install.packages("RODBC")
data.frame(state="Maryland",
country = "Prince George",
month = 1,
accidents = 23,
drunk = 4,
tickets = 67_
data.frame(state="Maryland",
country = "Prince George",
month = 1,
accidents = 23,
drunk = 4,
tickets = 67)
1:5
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
accidents = 23,
drunk = 4,
tickets = 67)
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
accidents = c(23,34,17,12,21),
drunk = 4,
tickets = 67)
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
accidents = c(23,34,17,12,21),
drunk = c(4,10,11,19,3),
tickets = 67)
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
accidents = c(23,34,17,12,21),
drunk = c(4,10,11,19,3),
tickets = 67,40,34,51,23)
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
accidents = c(23,34,17,12,21),
drunk = c(4,10,11,19,3),
tickets = c(67,40,34,51,23))
data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
year = 2005,
accidents = c(23,34,17,12,21),
drunk = c(4,10,11,19,3),
tickets = c(67,40,34,51,23))
dd = data.frame(state=rep("Maryland",5),
country = rep("Prince George",5),
month = 1:5,
year = 2005,
accidents = c(23,34,17,12,21),
drunk = c(4,10,11,19,3),
tickets = c(67,40,34,51,23))
getwd()
setwd("~/Desktop/")
getwd()
setwd("/Users/edunford/Desktop/")
path = "/Users/edunford/Dropbox/Programming/R/Teaching/CIA_Short_Course/basics/example_data/"
setwd("/Users/edunford/Dropbox/Programming/R/Teaching/CIA_Short_Course/basics/example_data/")
write.dta(dd)
write.dta(dd,file="traffic.dta")
write.csv(dd,file="traffic.dta",row.names = F)
write.foreign(dd, "c:/mydata.sas",   package="SAS")
write.foreign(dd, "traffic.sas",   package="SAS")
write.foreign(dd,"traffic.txt","traffic.sas",   package="SAS")
write.dta(dd,file="traffic.dta")
write.csv(dd,file="traffic.csv",row.names = F)
write.foreign(dd,"traffic.txt","traffic.sas",   package="SAS")
write.foreign(dd,"traffic.txt","traffic.sps",   package="SPSS")
save(dd,file="traffic.Rdata")
setwd("/Users/edunford/Desktop/")
setwd("/Users/edunford/Dropbox/Programming/R/Teaching/CIA_Short_Course/basics/example_data/")
read.table("traffic.txt")
read.table("traffic.txt")
read.table("traffic.txt",sep=",") # Need to set the delimiter
read.table("traffic.txt",sep=",",header=T) # Need to specify that the first rows are headers
write.table(dd,file="traffic.txt")
write.table(dd,file="traffic.txt",sep=",")
write.table(dd,file="traffic.tab",sep="\t")
read.table("traffic.txt")
read.table("traffic.txt",sep=",") # Need to set the delimiter
read.table("traffic.txt",sep=",",header=T) # Need to specify that the first rows are headers
read.table("traffic.tab")
read.table("traffic.txt",sep="\t",header=T)
write.table(dd,file="traffic.tab",sep="  ")
read.table("traffic.tab",sep="\t",header=T)
read.table("traffic.tab")
write.table(dd,file="traffic.txt",sep=",")
write.table(dd,file="traffic.txt",sep=":")
write.table(dd,file="traffic.txt",sep=";")
read.table("traffic.txt")
read.table("traffic.txt",sep=";",header=T) # Need to set the delimiter and that that the first rows are headers
read.table("traffic.tab")
read.csv("traffic.csv")
read.spss("traffic.sps")
read.table("traffic.sps")
read.spss("traffic.sps")
write.foreign(dd,"traffic.txt","traffic.sps",   package="SPSS")
write.table(dd,file="traffic.txt",sep=";")
read.spss("traffic.sps")
write.foreign(dd,codefile = "traffic.txt",datafile = "traffic.sps",package="SPSS")
read.spss("traffic.sps")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sps",package="SPSS")
read.spss("traffic.sps")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sps",package="SPSS")
read.spss("traffic.sps")
save(traffic,file="traffic.Rdata")
traffic=dd
save(traffic,file="traffic.Rdata")
read.spss("traffic.sps")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sps",package="SPSS")
write.foreign(dd,"traffic.txt","traffic.sas",   package="SAS")
library(Hmisc)
tbl <- sas.get("traffic")
spss.get("traffic.sps")
tbl <- sas.get("traffic.sas")
spss.get("traffic.sps")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sav",package="SPSS")
read.spss("traffic.sav")
read.spss("traffic.sps")
?read.spss
read.xport("traffic.sas")
write.foreign(dd,"traffic.txt","traffic.sas", package="SAS")
tbl <- sas.get("traffic.sas")
tbl
sas.get("traffic.sas")
read.xport("traffic.sas")
write.foreign(dd,"traffic.txt","traffic.sas", package="SAS")
sas.get("traffic.sas")
write.foreign(df = dd,"traffic.txt","traffic.sas", package="SAS")
dd
write.foreign(df = dd,"traffic.txt","traffic.sas", package="SAS")
sas.get("traffic.sas")
read.xport("traffic.sas")
read.spss("traffic.sps")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sav",package="SPSS")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sps",package="SPSS")
read.spss("traffic.sps")
read.xport("traffic.sas")
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.por",package="SPSS")
read.spss("traffic.sor")
read.spss("traffic.por")
write.foreign(df=dd, datafile="traffic.csv", codefile="traffic.sas", package="SAS")
read.xport("traffic.sas")
write.csv(dd,file="traffic.csv",row.names = F)
write.foreign(dd,datafile = "traffic.txt",codefile = "traffic.sav",package="SPSS")
read.spss("traffic.sav") # [DOES NOT WORK]
read.spss(file = "traffic.sav") # [DOES NOT WORK]
read.spss(file = "traffic.sav",to.data.frame = TRUE) # [DOES NOT WORK]
?write.foreign
?writeForeignSPSS
foreign:::writeForeignSPSS
?foreign:::writeForeignSPSS
library(haven)
traffic <- read_sav("~/Dropbox/Programming/R/Teaching/CIA_Short_Course/basics/example_data/traffic.sps")
View(traffic)
read.table("traffic.txt")
read.table("traffic.txt",sep=";",header=T) # Need to set the delimiter and that that the first rows are headers
write.table(dd,file="traffic.txt",sep=";")
read.table("traffic.txt")
read.table("traffic.txt",sep=";",header=T) # Need to set the delimiter and that that the first rows are headers
read.table("traffic.tab")
read.csv("traffic.csv")
read.spss(file = "traffic.sav",to.data.frame = TRUE) # [DOES NOT WORK]
write_sav(dd, "traffic.sav")
read.table("traffic.txt")
read.table("traffic.txt",sep=";",header=T) # Need to set the delimiter and that that the first rows are headers
read_sav("traffic.sav")
?traffic.sav
?read_sas
?write_sas()
write_sas(dd,"traffic.sas7bdat")
read_sas("traffic.sas7bdat")
read.dta("traffic.dta")
?readxl()
detach("package:Hmisc", unload=TRUE)
library("Hmisc", lib.loc="~/Library/R/3.3/library")
require(readxl)
readxl::read_excel("traffic.xlsx")
wb <- loadWorkbook("traffic.xlsx")
readWorksheet(object = wb,sheet="Sheet 1")
wb <- loadWorkbook("traffic.xlsx")
require(XLConnect)
wb <- loadWorkbook("traffic.xlsx")
readWorksheet(object = wb,sheet="Sheet 1")
readWorksheet(object = wb)
read_excel("traffic.xlsx")
data <- read.csv("traffic.csv")
data
View(data)
View(D)
read.csv("traffic.csv")
print(data)
head(data,2)
tail(data,2) # just give me the last two observations
load("traffic.Rdata")
data
subset(data,month>=4)
?subset
subset(data,tickets < 25)
rbind(data)
data
colnames(data)[2]
colnames(data)[2] = "county"
write.table(data,file="traffic.txt",sep=",")
write.csv(data,file="traffic.csv",row.names = F)
write_sav(data, "traffic.sav") # write .spss file format
write_sas(data,"traffic.sas7bdat")
write.dta(data,"traffic.dta") # <= 12
save(data,"traffic.Rdata") # saves as an R data object
save(data,file="traffic.Rdata") # saves as an R data object
data
data.frame(state="Idaho",
county="Magic Valley",
month=1,
year=2005,
accidents=20,
drunk=17,
tickets=110)
new_data = data.frame(state="Idaho",
county="Magic Valley",
month=1,
year=2005,
accidents=20,
drunk=17,
tickets=110)
new_data
new_data
rbind(data,new_data)
data2 = rbind(data,new_data)
data2
sample(data,1)
sample(data,size = 2)
data2 = rbind(t(data),new_data)
sample(t(data),size = 2)
sample(t(data),size = 2)
sample(t(data),size = 2)
data2 = rbind(data,new_data)
data2
sample(data2,size = 2)
cbind(data,data)
nrow(new_data)
nrow(data)
cbind(data,data)
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
source('~/.active-rstudio-document')
women
require(stargazer)
stargazer(women,out="html")
